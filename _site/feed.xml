<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.6">Jekyll</generator><link href="http://allanlavell.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://allanlavell.com/" rel="alternate" type="text/html" /><updated>2016-06-26T14:10:34-03:00</updated><id>http://allanlavell.com/</id><title>Allan Lavell</title><entry><title>How to Run Shaders on Apple Watch OS 3</title><link href="http://allanlavell.com/how-to-run-shaders-apple-watch/" rel="alternate" type="text/html" title="How to Run Shaders on Apple Watch OS 3" /><published>2016-06-26T00:00:00-03:00</published><updated>2016-06-26T00:00:00-03:00</updated><id>http://allanlavell.com/how-to-run-shaders-apple-watch</id><content type="html" xml:base="http://allanlavell.com/how-to-run-shaders-apple-watch/">&lt;p&gt;I‚Äôve wanted to write visualizations for Apple Watch since it was announced. WatchOS 1 &amp;amp; 2 only offered us GIF support - not too much we could do with that. With the introduction of watchOS 3, the Apple Watch hardware is finally starting to become truly accessible to developers - including shaders!&lt;/p&gt;

&lt;p&gt;This post will explain how to get the following shader demo running on your very own Apple Watch:&lt;/p&gt;

&lt;div class=&quot;embed twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot; align=&quot;center&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;got an OpenGL shader running on WatchOS 3 ‚åöÔ∏èüîÆ &lt;a href=&quot;https://twitter.com/hashtag/wwdc2016?src=hash&quot;&gt;#wwdc2016&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/yolo?src=hash&quot;&gt;#yolo&lt;/a&gt; modified a &lt;a href=&quot;https://twitter.com/yancyway&quot;&gt;@yancyway&lt;/a&gt; original from ShaderToy &lt;a href=&quot;https://t.co/dvyMXvAybG&quot;&gt;pic.twitter.com/dvyMXvAybG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Allan Lavell (@allanlavell) &lt;a href=&quot;https://twitter.com/allanlavell/status/743626914221305856&quot;&gt;June 17, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/div&gt;

&lt;h3 id=&quot;its-all-about-spritekit&quot;&gt;It‚Äôs all about SpriteKit&lt;/h3&gt;

&lt;p&gt;In the new update, Apple Watch gained access to much of SpriteKit - including the SKShader class. I set up a minimal Xcode project that serves as a starting point to get a shader running on the watch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thinkrad/ShaderDemoWatchOS3&quot;&gt;Download the Xcode project on Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to follow along, you‚Äôre going to need the Xcode 8 beta. The simulator actually does a half decent job of rendering the graphics - so you don‚Äôt even need to have actual hardware to test on! Bear in mind it will be slower on the simulator than on the actual hardware. If you want to run it on real hardware, you‚Äôre going to need to install iOS 10 beta on your iPhone, as well as the Watch OS 3 beta on your Watch.&lt;/p&gt;

&lt;h3 id=&quot;setting-the-scene&quot;&gt;Setting the Scene&lt;/h3&gt;

&lt;p&gt;The main setup occurs in ShaderScene.swift:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sceneDidLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;texture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SKTexture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;imageNamed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is42mmWatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bg42.png&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bg.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;shaderSprite&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SKSpriteNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;texture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;texture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is42mmWatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;312&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;390&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;272&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;320&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;shaderSprite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;shaderSprite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shaderSprite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;shader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SKShader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;fileNamed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ecophon.fsh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;shaderSprite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shader&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Basically all we‚Äôre doing here is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Making a sprite with a screen-sized texture&lt;/li&gt;
  &lt;li&gt;Adding a shader to it&lt;/li&gt;
  &lt;li&gt;Placing it in the scene&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The shader I‚Äôm demoing is generative (it‚Äôs not actually taking color input from the texture), so I‚Äôm just passing in a dummy texture - all white, in this case. There might be a way of doing this without even passing in a texture - but this way works, and gives the correct size info to the shader.&lt;/p&gt;

&lt;h3 id=&quot;the-shader-itself&quot;&gt;The Shader itself&lt;/h3&gt;

&lt;p&gt;I went digging through ShaderToy, and found &lt;a href=&quot;https://www.shadertoy.com/view/Mt2Gzz&quot;&gt;this excellent shader&lt;/a&gt; from internet graphics wizard &lt;a href=&quot;https://twitter.com/@yancyway&quot;&gt;Yancy Way&lt;/a&gt;. I modified it slightly from its original form - substituting some system provided variables (iGlobalTime becomes u_time, for example). The documentation for these variables can be found on the &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/SpriteKit/Reference/SKShader_Ref/index.html#//apple_ref/occ/cl/SKShader&quot;&gt;SKShader page&lt;/a&gt;. I also messed with a couple of the magic numbers that make the whole thing tick. Here‚Äôs the result:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-glsl&quot; data-lang=&quot;glsl&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define t u_time
#define r vec2(272., 320.)
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;vec3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//vec2 uv, p = gl_FragCoord.xy / size.xy;
&lt;/span&gt;        &lt;span class=&quot;kt&quot;&gt;vec2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v_tex_coord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;uv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;uv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;gl_FragColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;vec4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is the echophon.fsh file, as referenced in ShaderScene.swift. Write your own shaders and swap them in!&lt;/p&gt;

&lt;h3 id=&quot;thats-it&quot;&gt;That‚Äôs it.&lt;/h3&gt;

&lt;p&gt;It‚Äôs pretty simple. There‚Äôs definitely a bit more boilerplate we could add to make the setup even nicer (sending values to your shaders from code, for example), but I‚Äôll let you explore that for yourself. Feel free to send pull requests if you have anything to add!&lt;/p&gt;</content><summary>I‚Äôve wanted to write visualizations for Apple Watch since it was announced. WatchOS 1 &amp;amp; 2 only offered us GIF support - not too much we could do with that. With the introduction of watchOS 3, the Apple Watch hardware is finally starting to become truly accessible to developers - including shaders!</summary></entry><entry><title>Good Habits Through Good Haptics - Breathe for Apple Watch</title><link href="http://allanlavell.com/good-habits-good-haptics/" rel="alternate" type="text/html" title="Good Habits Through Good Haptics - Breathe for Apple Watch" /><published>2016-06-21T00:00:00-03:00</published><updated>2016-06-21T00:00:00-03:00</updated><id>http://allanlavell.com/good-habits-good-haptics</id><content type="html" xml:base="http://allanlavell.com/good-habits-good-haptics/">&lt;p&gt;There‚Äôs no question that technology plays a big role in forming our habits. &lt;a href=&quot;http://www.nirandfar.com/hooked&quot;&gt;&lt;em&gt;Hooked&lt;/em&gt;&lt;/a&gt;, an entire book on the subject, puts it perfectly in its introduction:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/hooked.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Whether we realize it or not, our interactions with the products surrounding us are shaping our reality. This puts an immense amount of responsibility in the hands of product designers. How will they influence us? To keep dumping money and time into &lt;em&gt;Clash of Clans&lt;/em&gt;? Or to spend more time meditating throughout the day?&lt;/p&gt;

&lt;h2 id=&quot;positive-vs-negative-products&quot;&gt;Positive vs. Negative Products&lt;/h2&gt;

&lt;p&gt;The habits formed by our use of technology are often referred to as &lt;em&gt;addictions&lt;/em&gt;. ‚ÄúI‚Äôm addicted to my phone‚Äù is not an uncommon phrase. The term &lt;em&gt;addiction&lt;/em&gt; has a negative connotation - and it‚Äôs true, a lot of the products we use encourage unhealthy behaviour. If they really have so much power, why don‚Äôt we just build a bunch of products that do good? As it turns out, it‚Äôs a lot harder than you might think, for an number of reasons.&lt;/p&gt;

&lt;h3 id=&quot;core-issues-facing-positive-products&quot;&gt;3 Core Issues Facing Positive Products&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Things that seem good at first often have unintended side-effects, especially at scale. They grow into monsters. &lt;em&gt;Facebook&lt;/em&gt;, anyone?&lt;/li&gt;
  &lt;li&gt;A lot of good habits are inherently boring and hard to productize. Brushing your teeth well? An important habit. Not exactly the sort of topic you‚Äôll be gossipping about on Twitter.&lt;/li&gt;
  &lt;li&gt;Good habits are often rooted in something we call &lt;em&gt;RL (Real Life)&lt;/em&gt;. Technology too often distracts from, rather than augments, our perception of what‚Äôs happening around us. This is partially a shortcoming of the hardware. Let‚Äôs face it - staring at and tapping on screens isn‚Äôt the best way to transfer information. It‚Äôs imprecise and inherently distracting!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;core-solutions-that-breathe-provides&quot;&gt;3 Core Solutions that &lt;em&gt;Breathe&lt;/em&gt; Provides&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Breathe&lt;/em&gt; doesn‚Äôt suffer too much from any of these common concerns. Let‚Äôs examine each in turn.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Breathe&lt;/em&gt; promotes a healthy practice, drawing users inwards rather than producing more chaos in their lives. I‚Äôm sure there are ways it can be misused - the most obvious thing coming to mind being &lt;em&gt;‚ÄúWhere is all that heart rate data going?‚Äù&lt;/em&gt; - but its core mission is simple and unintrusive.&lt;/li&gt;
  &lt;li&gt;Deep breathing and meditating isn‚Äôt exactly exciting, but meditation and yoga are at least fairly well-exposed topics in our society at this point. A lot of people are keyed into their potential benefits, thus making &lt;em&gt;Breathe&lt;/em&gt; a talking point.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Breathe&lt;/em&gt; makes minimal use of looking at or tapping on screens - instead it taps &lt;em&gt;you&lt;/em&gt; in a pattern that accelerates and decelerates, indicating the rhythm of breathing in and out. It has to be felt to be understood, but trust me - the tapping does a great job of guiding you through the session. No screen. No headphones. Nothing drawing you out of reality. Just a gentle tap remind you to focus in on it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../images/breathe.gif&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Breathe&lt;/em&gt; is a small win in a world where the majority of modern products that we consume (that consume &lt;em&gt;us&lt;/em&gt;?) have negative consequences, intended or not. What else can we build using the principle of enhancing, rather than replacing, experience?&lt;/p&gt;</content><summary>There‚Äôs no question that technology plays a big role in forming our habits. Hooked, an entire book on the subject, puts it perfectly in its introduction:</summary></entry><entry><title>Can the Playgrounds App Unlock Creativity on iPad?</title><link href="http://allanlavell.com/can-playgrounds-unlock-creativity/" rel="alternate" type="text/html" title="Can the Playgrounds App Unlock Creativity on iPad?" /><published>2016-06-14T12:49:00-03:00</published><updated>2016-06-14T12:49:00-03:00</updated><id>http://allanlavell.com/can-playgrounds-unlock-creativity</id><content type="html" xml:base="http://allanlavell.com/can-playgrounds-unlock-creativity/">&lt;p&gt;I was sitting beside a toddler on the plane ride to WWDC. He spent the entire flight on an iPad. His main activities were watching &lt;em&gt;Cars&lt;/em&gt; and finger painting on some paint app. Good diversions for a long ride, but not the most inspiring use of a young mind‚Äôs time. Mobile devices simply don‚Äôt faciliate creative output in most cases. Hopefully, &lt;a href=&quot;http://www.apple.com/swift/playgrounds/&quot;&gt;Apple‚Äôs new Playgrounds app&lt;/a&gt; will help blaze that trail in an important context: programming literacy.&lt;/p&gt;

&lt;p&gt;In a time where people are being given Facebook accounts before they‚Äôre self-aware, I don‚Äôt think it‚Äôs ethical for us to neglect their education in how to control technology. Without efforts to teach them that the functionality of these devices are malleable, the screens become more like blinds than portals into a creative universe. Teaching that creativity is possible directly on the device where the content is being consumed represents a promising possible direction.&lt;/p&gt;

&lt;p&gt;Playgrounds have an educational focus and are distributed on a platform that is often the first technology available to young minds. If even a fraction of the time spent on iPads goes towards that sort of creative thinking, we‚Äôre giving spark to a potential creative flame that could be lost in the consumption-heavy context of life on an iPad. The fact that Swift can be &lt;em&gt;actually&lt;/em&gt; be deployed in an increasing number of practical production contexts takes this endeavor from a sandboxed learning exercise to a serious opportunity for aspiring programmers.&lt;/p&gt;</content><summary>I was sitting beside a toddler on the plane ride to WWDC. He spent the entire flight on an iPad. His main activities were watching Cars and finger painting on some paint app. Good diversions for a long ride, but not the most inspiring use of a young mind‚Äôs time. Mobile devices simply don‚Äôt faciliate creative output in most cases. Hopefully, Apple‚Äôs new Playgrounds app will help blaze that trail in an important context: programming literacy.</summary></entry><entry><title>How to Install the new Swift Playgrounds App on your iPad</title><link href="http://allanlavell.com/install-playgrounds-app/" rel="alternate" type="text/html" title="How to Install the new Swift Playgrounds App on your iPad" /><published>2016-06-14T00:00:00-03:00</published><updated>2016-06-14T00:00:00-03:00</updated><id>http://allanlavell.com/install-playgrounds-app</id><content type="html" xml:base="http://allanlavell.com/install-playgrounds-app/">&lt;p&gt;Apple introduced the new Swift Playgrounds app at WWDC yesterday, which lets you edit playgrounds directly on your iPad. Googling yields tons of posts about its exsitence, but it‚Äôs not obvious how developers can actually &lt;em&gt;install&lt;/em&gt; it. As it turns out, it‚Äôs simple.&lt;/p&gt;

&lt;h3 id=&quot;the-swift-playgrounds-app-is-bundled-with-ios-10&quot;&gt;The Swift Playgrounds app is bundled with iOS 10.&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.iphonehacks.com/2016/06/install-ios-10-beta.html&quot;&gt;Install iOS 10 on your iPad&lt;/a&gt; and you‚Äôll be good to go.&lt;/p&gt;</content><summary>Apple introduced the new Swift Playgrounds app at WWDC yesterday, which lets you edit playgrounds directly on your iPad. Googling yields tons of posts about its exsitence, but it‚Äôs not obvious how developers can actually install it. As it turns out, it‚Äôs simple.</summary></entry></feed>
